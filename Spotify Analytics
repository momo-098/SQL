CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)


# Which are the most popular songs, including the artists name?
SELECT track_name, artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

# Which are the top 10 loudest songs and who were the artists?
SELECT track_name, artist_name, loudness
FROM BIT_DB.Spotifydata
ORDER BY loudness
LIMIT 10;

# What are the songs danceability and energy, plus the artists?
SELECT track_name, artist_name, danceability, energy
FROM BIT_DB.Spotifydata
ORDER BY danceability;

# What is the modality of a song, major or minor?
SELECT track_name, artist_name, song_mode
FROM BIT_DB.Spotifydata
ORDER BY song_mode;

# Organize the songs by how long they are
SELECT track_name, artist_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms;

# Organize the songs by tempo
SELECT track_name, artist_name, tempo
FROM BIT_DB.Spotifydata
ORDER BY tempo;

# Show the average for each value
SELECT AVG(danceability), AVG(energy), AVG(song_key), AVG(loudness), AVG(song_mode), AVG(speechiness), AVG(acousticness), AVG(instrumentalness), AVG(liveness), AVG(valence), AVG(tempo), AVG(duration_ms)
FROM BIT_DB.Spotifydata;
